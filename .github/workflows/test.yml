name: test

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: test ${{ matrix.python-version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu", "macos", "windows"]
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Check out source
        uses: actions/checkout@v2
      - name: Install poetry
        run: |
              python -m pip install pipx
              python -m pipx install poetry==1.1.12
              poetry install
      - name: Run checks
        run: poetry run pytest --junitxml=test-results-${{ matrix.python-version }}-${{ matrix.os }}.xml --cov=electrostatic --cov-report=xml --cov-report=html
      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-${{ matrix.python-version }}-${{ matrix.os }}
          path: test-results-${{ matrix.python-version }}-${{ matrix.os }}.xml
        # Use always() to always run this step to publish test results even when there are test failures
        if: ${{ always() }}
      - name: Upload pytest coverage results
        uses: actions/upload-artifact@v2
        with:
          name: coverage-${{ matrix.python-version }}-${{ matrix.os }}
          path: coverage.xml
